/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as DrDroid from "../../api";
import * as core from "../../core";

export const Value: core.serialization.Schema<serializers.Value.Raw, DrDroid.Value> =
    core.serialization.undiscriminatedUnion([
        core.serialization.lazyObject(async () => (await import("..")).StringValue),
        core.serialization.lazyObject(async () => (await import("..")).BoolValue),
        core.serialization.lazyObject(async () => (await import("..")).DoubleValue),
        core.serialization.lazyObject(async () => (await import("..")).IntValue),
        core.serialization.lazyObject(async () => (await import("..")).DatetimeValue),
        core.serialization.lazyObject(async () => (await import("..")).ArrayValue),
        core.serialization.lazyObject(async () => (await import("..")).DictValue),
        core.serialization.lazyObject(async () => (await import("..")).ObjValue),
    ]);

export declare namespace Value {
    type Raw =
        | serializers.StringValue.Raw
        | serializers.BoolValue.Raw
        | serializers.DoubleValue.Raw
        | serializers.IntValue.Raw
        | serializers.DatetimeValue.Raw
        | serializers.ArrayValue.Raw
        | serializers.DictValue.Raw
        | serializers.ObjValue.Raw;
}
