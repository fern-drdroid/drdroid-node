/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as DrDroid from "../api";
import { DrDroidClient as FernClient } from "../Client";
import { convertEventPayload } from "./convertEventPayload";
import { EventQueue } from "./EventQueue";

export declare namespace DrDroidClient {
    export type Options = FernClient.Options;
}

export class DrDroidClient {
    private client: FernClient;
    private queue = new EventQueue(this.sendEvents.bind(this), 2_000);

    constructor(protected readonly options: DrDroidClient.Options) {
        this.client = new FernClient(options);
    }

    public publish(name: string, payload?: object, eventTime?: Date): void {
        this.queue.addEvent({
            name,
            timestamp: eventTime != null ? eventTime.getTime() : Date.now(),
            kvs: payload != null ? convertEventPayload(payload) : {},
        });
    }

    public flush(): void {
        this.queue.flush();
    }

    private sendEvents(events: DrDroid.Event[]): void {
        this.client.sendEvents({
            data: {
                events,
            },
        });
    }
}
